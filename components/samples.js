// audio samples and a whole bunch of examples for each
module.exports = {

allsamples: [
  {sample: "db", name: "Dawn-Breakers",  baseSize: 1407140, raw: 'sample.flac', rawsize: 10023703},
  {sample: "country_doc", name: "Country Doctor", baseSize: 2123255, raw: 'country_doc/source.flac', rawsize: 5355179},
  {sample: "candide", name: "Candide", baseSize: 2117892, raw: 'candide/source.flac', rawsize: 7345039},
],

allexamples: [
  // Country Doctor
  { sample: 'country_doc',
  desc: "Original compressed (non-lossy) FLAC", script: "none", size: 5355179, src:'country_doc/source.flac'},
  { sample: 'country_doc',
  desc: "ILM compressed version (Baseline)",  size: 2123255, src:'country_doc/ilm-c4.m4a', script: "unknown", },
  { sample: 'country_doc',
    desc: "Use libfdk_aac, 40k 22050hz, normalize (dynamic) to .95", size: 1202017,
    src: "country_doc/test20.m4a",
    script: `ffmpeg -i country_doc/source.flac -af "dynaudnorm=f=150:c=1:b=1" -c:a libfdk_aac -b:a 40k -ar 22050 country_doc/test20.m4a`,
    best: true
  },


  // Candide
  { sample: 'candide',
    desc: "Original compressed (non-lossy) FLAC", script: "none", size: 7345039, src:'candide/source.flac'},
  { sample: 'candide',
    desc: "ILM compressed version (Baseline)",  size: 2117892, src:'candide/ilm-blo8.m4a', script: "unknown", },
  { sample: 'candide',
    desc: "Use libfdk_aac, 40k 22050hz, normalize (dynamic) to .95", size: 1199025,
    src: "candide/test20.m4a",
    script: `ffmpeg -i candide/source.flac -af "dynaudnorm=f=150:c=1:b=1" -c:a libfdk_aac -b:a 40k -ar 22050 candide/test20.m4a`,
    best: true
  },


  // Dawn-Breakers
 { sample: 'db',
   desc: "Original compressed (non-lossy) FLAC", script: "none", size: 10023703, src:'sample.flac'},
 { sample: 'db',
   desc: "ILM compressed version (Baseline)",  size: 1407140, src:'y8.m4a', script: "unknown", },
 { sample: 'db',
   desc: "Direct Conversion to M4A",  size: 1397115, src:'test1.m4a',
   script: "ffmpeg -i sample.flac test1.m4a",
 },
 { sample: 'db',
   desc: "Strip extra tags and reduce bitrate",  size: 1073493, src:'test2.m4a',
   script: "ffmpeg -i sample.flac -b:a 96k -map a test2.m4a",
 },
 { sample: 'db',
   desc: "Reduce bitrate further",  size: 719745, src:'test3.m4a',
   script: "ffmpeg -i sample.flac -b:a 64k -map a test3.m4a",
 },
 { sample: 'db',
   desc: "Remove audio channel (fail)",  size: 720175, src:'test4.m4a',
   script: "ffmpeg -i sample.flac -b:a 64k -map a -map_channel 0.0.0 test4.m4a",
 },
 { sample: 'db',
   desc: "VBR (big fail)",  size: 1285662, src:'test7.m4a',
   script: "ffmpeg -i sample.flac -c:a aac -q:a 2 -map a test7.m4a",
 },
 { sample: 'db',
   desc: "Advanced filter (afftdn)",  size: 704199, src:'test5.m4a',
   script: "ffmpeg -i sample.flac -b:a 64k -map a -af afftdn test5.m4a",
 },
 { sample: 'db',
   desc: "Advanced filter (anlmdn)",  size: 666728, src:'test6.m4a',
   script: "ffmpeg -i sample.flac -b:a 64k -map a -af anlmdn test6.m4a",
 },
 { sample: 'db',
   desc: "Filter (anlmdn) plus tighten bitrate",  size: 504189, src:'test8.m4a',
   script: "ffmpeg -i sample.flac -b:a 48k -map a -af anlmdn test8.m4a",
 },
 { sample: 'db',
   desc: "Even tighter bitrate",  size: 487862, src:'test9.m4a',
   script: "ffmpeg -i sample.flac -b:a 46k -map a -af anlmdn test9.m4a",
 },
 { sample: 'db',
   desc: "Dynamic range compression (with a gain boost)",  size: 472156, src:'test10.m4a',
   script: `ffmpeg -i sample.flac -b:a 46k -map a
   -filter_complex "compand=attacks=0:points=-30/-900|-20/-20|0/0|20/20:gain=5"
   test10.m4a`,
 },
 { sample: 'db',
   desc: "More dynamic range compression (sounds good but less compact)",  size: 522743, src:'test11.m4a',
   script: `ffmpeg -i sample.flac -b:a 46k -map a
   -filter_complex "compand=attacks=0:points=-80/-900|-45/-15|-27/-9|0/-7|20/-7:gain=5"
   test11.m4a`,
 },
 { sample: 'db',
   desc: "More dynamic range compression (sounds good but less compact)",  size: 522604, src:'test12.m4a',
   script: `ffmpeg -i sample.flac -b:a 46k -map a
   -aac_coder twoloop
   -filter_complex "compand=attacks=0:points=-80/-900|-45/-15|-27/-9|0/-7|20/-7:gain=5"
   test12.m4a`,
 },
 { sample: 'db',
   desc: "Use libfdk_aac",
   size: 1413303,
   src: "test13.m4a",
   script: "ffmpeg -i sample.flac -c:a libfdk_aac test13.m4a",
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 64k",
   size: 712972,
   src: "test14.m4a",
   script: "ffmpeg -i sample.flac -c:a libfdk_aac -b:a 64k test14.m4a",
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 64k 22050hz",
   size: 706030,
   src: "test15.m4a",
   script: "ffmpeg -i sample.flac -c:a libfdk_aac -b:a 64k -ar 22050 test15.m4a",
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 48k 22050hz",
   size: 531601,
   src: "test16.m4a",
   script: "ffmpeg -i sample.flac -c:a libfdk_aac -b:a 48k -ar 22050 test16.m4a",
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 32k 22050hz",
   size: 357173,
   src: "test17.m4a",
   script: "ffmpeg -i sample.flac -c:a libfdk_aac -b:a 32k -ar 22050 test17.m4a",
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 40k 22050hz",
   size: 444387,
   src: "test18.m4a",
   script: "ffmpeg -i sample.flac -c:a libfdk_aac -b:a 40k -ar 22050 test18.m4a",
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 40k 22050hz, compander",
   size: 444579,
   src: "test19.m4a",
   script: `ffmpeg -i sample.flac -c:a libfdk_aac -b:a 40k -ar 22050 -filter_complex "compand=attacks=0:points=-80/-900|-45/-15|-27/-9|0/-7|20/-7:gain=5" test19.m4a`,
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 40k 22050hz, normalize (dynamic) to .95",
   size: 444433,
   src: "test20.m4a",
   script: `ffmpeg -i sample.flac -af "dynaudnorm=f=150:c=1:b=1" -c:a libfdk_aac -b:a 40k -ar 22050 test20.m4a`,
   best: true
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 40k 22050hz, normalize (dynamic) to .90",
   size: 444426,
   src: "test21.m4a",
   script: `ffmpeg -i sample.flac -af "dynaudnorm=p=0.90:f=150:c=1:b=1" -c:a libfdk_aac -b:a 40k -ar 22050 test21.m4a`,
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 40k 22050hz, normalize (dynamic) to .85",
   size: 444413,
   src: "test22.m4a",
   script: `ffmpeg -i sample.flac -af "dynaudnorm=p=0.85:f=150:c=1:b=1" -c:a libfdk_aac -b:a 40k -ar 22050 test22.m4a`,
 },
 { sample: 'db',
   desc: "Use libfdk_aac, 40k 22050hz, normalize (dynamic) to .85 with max gain 5",
   size: 444387,
   src: "test23.m4a",
   script: `ffmpeg -i sample.flac -af "dynaudnorm=p=0.85:m=5:f=150:c=1:b=1" -c:a libfdk_aac -b:a 40k -ar 22050 test23.m4a`,
 },
]

}
// export default {samples, examples};
